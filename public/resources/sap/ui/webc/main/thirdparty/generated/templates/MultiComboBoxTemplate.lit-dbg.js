sap.ui.define(["exports", "sap/ui/webc/common/thirdparty/base/renderer/LitRenderer"], function (_exports, _LitRenderer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;

  /* eslint no-unused-vars: 0 */
  const block0 = (context, tags, suffix) => suffix ? (0, _LitRenderer.html)`<div class="ui5-multi-combobox-root ui5-input-focusable-element"><span id="${(0, _LitRenderer.ifDefined)(context._id)}-hiddenText-nMore" class="ui5-hidden-text">${(0, _LitRenderer.ifDefined)(context._tokensCountText)}</span>${context.hasValueState ? block1(context, tags, suffix) : undefined}<${(0, _LitRenderer.scopeTag)("ui5-tokenizer", tags, suffix)} slot="_beginContent" show-more class="ui5-multi-combobox-tokenizer" ?disabled="${context.disabled}" @ui5-show-more-items-press="${(0, _LitRenderer.ifDefined)(context._showFilteredItems)}" @ui5-token-delete="${(0, _LitRenderer.ifDefined)(context._tokenDelete)}" @focusout="${context._tokenizerFocusOut}" @focusin="${context._tokenizerFocusIn}" @click=${context._click} @keydown="${context._onTokenizerKeydown}" ?expanded="${context._tokenizerExpanded}">${(0, _LitRenderer.repeat)(context.items, (item, index) => item._id || index, (item, index) => block2(item, index, context, tags, suffix))}</${(0, _LitRenderer.scopeTag)("ui5-tokenizer", tags, suffix)}><input id="ui5-multi-combobox-input" .value="${(0, _LitRenderer.ifDefined)(context.value)}" inner-input placeholder=${(0, _LitRenderer.ifDefined)(context._getPlaceholder)} ?disabled=${context.disabled} ?readonly=${context.readonly} value-state="${(0, _LitRenderer.ifDefined)(context.valueState)}" @input="${context._inputLiveChange}" @change=${context._inputChange} @keydown="${context._onkeydown}" @keyup="${context._onkeyup}" @click=${context._click} @focusin=${context.inputFocusIn} @focusout=${context.inputFocusOut} role="combobox" aria-haspopup="listbox" aria-expanded="${(0, _LitRenderer.ifDefined)(context.open)}" aria-autocomplete="both" aria-describedby="${(0, _LitRenderer.ifDefined)(context.ariaDescribedByText)}" aria-required="${(0, _LitRenderer.ifDefined)(context.required)}" aria-label="${(0, _LitRenderer.ifDefined)(context.ariaLabelText)}" />${context.icon ? block4(context, tags, suffix) : undefined}${!context.readonly ? block5(context, tags, suffix) : undefined}</div>` : (0, _LitRenderer.html)`<div class="ui5-multi-combobox-root ui5-input-focusable-element"><span id="${(0, _LitRenderer.ifDefined)(context._id)}-hiddenText-nMore" class="ui5-hidden-text">${(0, _LitRenderer.ifDefined)(context._tokensCountText)}</span>${context.hasValueState ? block1(context, tags, suffix) : undefined}<ui5-tokenizer slot="_beginContent" show-more class="ui5-multi-combobox-tokenizer" ?disabled="${context.disabled}" @ui5-show-more-items-press="${(0, _LitRenderer.ifDefined)(context._showFilteredItems)}" @ui5-token-delete="${(0, _LitRenderer.ifDefined)(context._tokenDelete)}" @focusout="${context._tokenizerFocusOut}" @focusin="${context._tokenizerFocusIn}" @click=${context._click} @keydown="${context._onTokenizerKeydown}" ?expanded="${context._tokenizerExpanded}">${(0, _LitRenderer.repeat)(context.items, (item, index) => item._id || index, (item, index) => block2(item, index, context, tags, suffix))}</ui5-tokenizer><input id="ui5-multi-combobox-input" .value="${(0, _LitRenderer.ifDefined)(context.value)}" inner-input placeholder=${(0, _LitRenderer.ifDefined)(context._getPlaceholder)} ?disabled=${context.disabled} ?readonly=${context.readonly} value-state="${(0, _LitRenderer.ifDefined)(context.valueState)}" @input="${context._inputLiveChange}" @change=${context._inputChange} @keydown="${context._onkeydown}" @keyup="${context._onkeyup}" @click=${context._click} @focusin=${context.inputFocusIn} @focusout=${context.inputFocusOut} role="combobox" aria-haspopup="listbox" aria-expanded="${(0, _LitRenderer.ifDefined)(context.open)}" aria-autocomplete="both" aria-describedby="${(0, _LitRenderer.ifDefined)(context.ariaDescribedByText)}" aria-required="${(0, _LitRenderer.ifDefined)(context.required)}" aria-label="${(0, _LitRenderer.ifDefined)(context.ariaLabelText)}" />${context.icon ? block4(context, tags, suffix) : undefined}${!context.readonly ? block5(context, tags, suffix) : undefined}</div>`;

  const block1 = (context, tags, suffix) => (0, _LitRenderer.html)`<span id="${(0, _LitRenderer.ifDefined)(context._id)}-valueStateDesc" class="ui5-hidden-text">${(0, _LitRenderer.ifDefined)(context.valueStateText)}</span>`;

  const block2 = (item, index, context, tags, suffix) => (0, _LitRenderer.html)`${item.selected ? block3(item, index, context, tags, suffix) : undefined}`;

  const block3 = (item, index, context, tags, suffix) => suffix ? (0, _LitRenderer.html)`<${(0, _LitRenderer.scopeTag)("ui5-token", tags, suffix)} ?readonly="${context.readonly}" class="ui5-multi-combobox-token" data-ui5-id="${(0, _LitRenderer.ifDefined)(item._id)}" part="token-${index}" text="${(0, _LitRenderer.ifDefined)(item.text)}"></${(0, _LitRenderer.scopeTag)("ui5-token", tags, suffix)}>` : (0, _LitRenderer.html)`<ui5-token ?readonly="${context.readonly}" class="ui5-multi-combobox-token" data-ui5-id="${(0, _LitRenderer.ifDefined)(item._id)}" part="token-${index}" text="${(0, _LitRenderer.ifDefined)(item.text)}"></ui5-token>`;

  const block4 = (context, tags, suffix) => (0, _LitRenderer.html)`<slot name="icon"></slot>`;

  const block5 = (context, tags, suffix) => suffix ? (0, _LitRenderer.html)`<${(0, _LitRenderer.scopeTag)("ui5-icon", tags, suffix)} name="slim-arrow-down" input-icon slot="icon" tabindex="-1" @click="${context.togglePopoverByDropdownIcon}" @mousedown="${context._onIconMousedown}" @focusin="${context._forwardFocusToInner}" ?pressed="${context.open}" accessible-name="${(0, _LitRenderer.ifDefined)(context._iconAccessibleNameText)}"></${(0, _LitRenderer.scopeTag)("ui5-icon", tags, suffix)}>` : (0, _LitRenderer.html)`<ui5-icon name="slim-arrow-down" input-icon slot="icon" tabindex="-1" @click="${context.togglePopoverByDropdownIcon}" @mousedown="${context._onIconMousedown}" @focusin="${context._forwardFocusToInner}" ?pressed="${context.open}" accessible-name="${(0, _LitRenderer.ifDefined)(context._iconAccessibleNameText)}"></ui5-icon>`;

  var _default = block0;
  _exports.default = _default;
});